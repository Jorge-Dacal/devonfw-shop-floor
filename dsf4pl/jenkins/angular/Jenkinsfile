/*******************************************************************************
 * Copyright 2015-2018 Capgemini SE.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 ******************************************************************************/

node {
    stage('Define your Project') {
        def PROJECT_NAME=""
        def REPO_URL="" // github/gitlab/gogs/... URL where your project's sourcecode is located
        def REPO_BRANCH="" // branch of the repo you want to run
        def CONTAINER_PORT="" // port where the Docker container of your App will be deployed
        def CONTAINER_NAME="" // "official name" of the Docker container. For example: "mythaistar-angular"
        def EXTERNAL_SERVER_DIR="" // directory of your External server for deployment where your project's artifact will be copied in
        def EXTERNAL_SERVER_USERNAME="" // user which with enough rights to execute all steps in the Deployment stage
    }

    stage('Checking out ${PROJECT_NAME}') {
        deleteDir()
        git branch: ${REPO_BRANCH}, url: ${REPO_URL}
    }

    stage('Loading Custom Tools') {
        def node = tool name: 'Node 8.9 LTS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
        env.PATH = "${node}/bin:${env.PATH}"
        sh "npm i -g yarn"
        tool 'Chrome-stable'
    }
    
    stage('Dependency Installation') {
        sh "yarn"
    }
    
    stage('Code Linting') {
        sh "yarn lint"
    }
    
    stage('Execute Angular tests') {
        sh "ng test --browsers ChromeHeadless --single-run"
    }
    
    stage('Build Application') {
        sh "ng build --prod --build-optimizer"
    }
    
    stage('Deployment') {
        sshagent (credentials: [${SSH_CREDENTIALS}]) {
            sh """
                cd angular
                # Copy resulting "dist" folder from workspace to deployment server
                scp -o StrictHostKeyChecking=no -r dist ${EXTERNAL_SERVER_USERNAME}@${params.EXTERNAL_SERVER_IP}:${EXTERNAL_SERVER_DIR}
                
                # Launch application in Docker container
                ssh -o StrictHostKeyChecking=no ${EXTERNAL_SERVER_USERNAME}@${params.EXTERNAL_SERVER_IP} docker rm -f ${CONTAINER_NAME}
                ssh -o StrictHostKeyChecking=no ${EXTERNAL_SERVER_USERNAME}@${params.EXTERNAL_SERVER_IP} docker run -itd --name=${CONTAINER_NAME} -p ${CONTAINER_PORT}:80 cbelda/nginx-try-files
                ssh -o StrictHostKeyChecking=no ${EXTERNAL_SERVER_USERNAME}@${params.EXTERNAL_SERVER_IP} exec ${CONTAINER_NAME} bash -c \\"rm /usr/share/nginx/html/*\\"
                ssh -o StrictHostKeyChecking=no ${EXTERNAL_SERVER_USERNAME}@${params.EXTERNAL_SERVER_IP} cp ${EXTERNAL_SERVER_DIR}/dist/. ${CONTAINER_NAME}:/usr/share/nginx/html/
            """
            echo "Your app is available in http://${params.EXTERNAL_SERVER_IP}:${CONTAINER_PORT}"
        }
    }
}
