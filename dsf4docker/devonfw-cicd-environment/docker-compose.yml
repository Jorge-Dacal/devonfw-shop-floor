version: '2'

services:

  nginx-proxy:
    image: 'jwilder/nginx-proxy'
    restart: always
    container_name: 'dsf_reverse_proxy'
    networks:
      - devonfw-shop-floor
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  tomcat-staging:
    image: 'bitnami/tomcat:latest'
    container_name: 'dsf_tomcat_staging'
    networks:
      - devonfw-shop-floor
#    ports:
#      - '9090:8080'
    environment:
      - VIRTUAL_HOST=tomcat-staging.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=8080

  tomcat-dev:
    image: 'bitnami/tomcat:latest'
    container_name: 'dsf_tomcat_dev'
    networks:
      - devonfw-shop-floor
#    ports:
#      - '9091:8080'
    environment:
      - VIRTUAL_HOST=tomcat-dev.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=8080

  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    restart: always
    container_name: 'dsf_gitlab'
    networks:
      - devonfw-shop-floor
#    ports:
#      - '8888:80'
#      - '444:443'
#      - '23:22'
    volumes:
      - './volumes/gitlab/etc/gilab:/etc/gitlab'
      - './volumes/gitlab/var/log:/var/log/gitlab'
      - './volumes/gitlab/var/opt:/var/opt/gitlab'
      - './volumes/gitlab/ssl:/etc/ssl/certs/gitlab'
    environment:
      - VIRTUAL_HOST=gitlab.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=80

  jenkins:
    image: 'jenkins'
    restart: always
    container_name: 'dsf_jenkins'
    networks:
      - devonfw-shop-floor
    volumes:
      - './volumes/jenkins/jenkins_home:/var/jenkins_home'
#    ports:
#      - '8080:8080'
    environment:
      - VIRTUAL_HOST=jenkins.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=8080

  sonarqube:
    image: 'sonarqube'
    container_name: 'dsf_sonarqube'
    networks:
      - devonfw-shop-floor
    volumes:
      - './volumes/sonarqube/conf:/opt/sonarqube/conf'
      - './volumes/sonarqube/data:/opt/sonarqube/data'
      - './volumes/sonarqube/extensions:/opt/sonarqube/extensions'
      - './volumes/sonarqube/lib/bundled-plugins:/opt/sonarqube/lib/bundled-plugins'
#    ports:
#      - '9000:9000'
    environment:
      - VIRTUAL_HOST=sonarqube.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=9000

  nexus:
    image: 'sonatype/nexus'
    restart: always
    container_name: 'dsf_nexus'
    networks:
      - devonfw-shop-floor
    volumes:
      - './volumes/nexus/nexus-data:/sonatype-work'
#    ports:
#      - '8081:8081'
    environment:
      - VIRTUAL_HOST=nexus.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=8081

  jira:
    image: 'blacklabelops/jira'
    restart: always
    container_name: 'dsf_jira'
    networks:
      - devonfw-shop-floor
    volumes:
      - './volumes/jira/data:/var/atlassian/jira'
#    ports:
#      - '8099:8080'
    environment:
      - VIRTUAL_HOST=jira.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=8080

  crucible:
    image: 'mswinarski/atlassian-crucible'
    restart: always
    container_name: 'dsf_crucible'
    networks:
      - devonfw-shop-floor
    volumes:
      - './volumes/crucible/data:/atlassian/data/crucible'
#    ports:
#      - '8077:8080'
    environment:
      - VIRTUAL_HOST=crucible.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=8080

  db:
    image: mattermost/mattermost-prod-db
    restart: unless-stopped
    container_name: 'dsf_mattermost_db'
    networks:
      - devonfw-shop-floor
    volumes:
      - './volumes/mattermost/db/var/lib/postgresql/data:/var/lib/postgresql/data'
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=mmuser
      - POSTGRES_PASSWORD=mmuser_password
      - POSTGRES_DB=mattermost
  app:
    image: mattermost/mattermost-prod-app
    restart: unless-stopped
    container_name: 'dsf_mattermost_app'
    networks:
      - devonfw-shop-floor
    volumes:
      - './volumes/mattermost/app/mattermost/config:/mattermost/config:rw'
      - './volumes/mattermost/app/mattermost/data:/mattermost/data:rw'
      - './volumes/mattermost/app/mattermost/logs:/mattermost/logs:rw'
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MM_USERNAME=mmuser
      - MM_PASSWORD=mmuser_password
      - MM_DBNAME=mattermost
  web:
    image: mattermost/mattermost-prod-web
    container_name: 'dsf_mattermost_web'
    networks:
      - devonfw-shop-floor
    restart: unless-stopped
    volumes:
      - './volumes/mattermost/web/cert:/cert:ro'
      - /etc/localtime:/etc/localtime:ro
#    ports:
#      - '9999:80'
    environment:
      - VIRTUAL_HOST=mattermost.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=80

  portainer:
    image: 'portainer/portainer'
    restart: always
    container_name: 'dsf_portainer'
    networks:
      - devonfw-shop-floor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - './volumes/portainer/data:/data'
    environment:
      - VIRTUAL_HOST=portainer.IP_ADDRESS.nip.io
      - VIRTUAL_PORT=9000

networks:
  devonfw-shop-floor:
    driver: bridge
